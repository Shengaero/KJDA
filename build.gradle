import java.time.OffsetDateTime
import java.time.ZoneId
import java.time.format.DateTimeFormatter

buildscript {
    ext.kotlin_version = '1.2.0-rc-39'

    repositories {
        maven { url 'http://dl.bintray.com/kotlin/kotlin-eap-1.2' }
        mavenCentral()
    }

    dependencies {
        //noinspection DifferentKotlinGradleVersion
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.jetbrains.dokka:dokka-gradle-plugin:0.9.9'
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '1.2.4'
}

apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'

group = 'me.kgustave'
version = '0.1'

def jda_version = '3.3.1_284'

sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    test.kotlin.srcDirs += 'src/test/kotlin'
    examples.kotlin.srcDirs += 'src/examples/kotlin'

    test {
        compileClasspath = main.output
        runtimeClasspath = main.output
    }

    examples {
        compileClasspath = main.output
        runtimeClasspath = main.output
    }
}

repositories {
    jcenter()
    maven { url 'http://dl.bintray.com/kotlin/kotlin-eap-1.2' }
    mavenCentral()
}

sourceSets {
    examples.kotlin.srcDirs += "src/examples/kotlin"
    test.kotlin.srcDirs += "src/test/kotlin"
    examples {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
    }

    test {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
    }
}

dependencies {
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compileOnly "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compileOnly 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.19.3'

    compileOnly "net.dv8tion:JDA:$jda_version"

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

kotlin {
    experimental.coroutines "enable"
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileExamplesKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    logging.level = LogLevel.QUIET
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/dokkaJavadoc"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from "$buildDir/sources"
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    //noinspection GroovyAssignabilityCheck
    from dokkaJavadoc.outputDirectory
}

task sources(type: Copy) {
    from 'src/main/kotlin'
    into "$buildDir/sources"
}

compileJava {
    dependsOn sources
}

wrapper {
    gradleVersion = '4.0.0'
}

jar {
    def time = OffsetDateTime.now(ZoneId.of("UTC"))
    manifest {
        attributes 'Implementation-Version': version
        attributes 'Created-At': time.format(DateTimeFormatter.ISO_OFFSET_DATE_TIME)
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'com.github.TheMonitorLizard'
            artifactId 'KJDA'

            version project.version

            artifact sourcesJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }

            artifact jar {
                classifier ''
            }

            artifact shadowJar {
                classifier 'withDependencies'
            }
        }
    }
}